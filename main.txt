A format is NEVER part of a data recovery or disk rebuild process and if done in such circumstances will normally lead to loss of all data on the disks being formatted=A format is **NEVER** part of a data recovery or disk rebuild process and if done in such circumstances will normally lead to loss of all data on the disks being formatted
Aborted=
Add=
Add Pool=
All existing data on this device will be OVERWRITTEN when array is Started=
Array Devices=
Array of %s devices=
Array Operation=
Attribute Name=
Attributes=
Balance Status=
Balance=
Blacklisted=
Boot Device=
Boot system in UEFI mode=
btrfs balance status=
btrfs check status=
btrfs filesystem df=
BTRFS operation is running=
btrfs scrub status=
Can not read attributes=
Can not read capabilities=
Can not read identification=
Canceled=
Cannot contact key-server. Please check your=
Capabilities=
Check Filesystem Status=
Clear Stats=
Clearing in progress=
Click to spin down device=
Click to spin up device=
Comments=
complete=
Completed without error=
Configuration valid=
Convert to raid0 mode=
Convert to raid1 mode=
Convert to raid10 mode=
Convert to raid5 mode see help=Convert to raid5 mode *see help
Convert to raid6 mode see help=Convert to raid6 mode *see help
Convert to single mode=
Copying=
corrected=
Create an empty file system on the disks shown as Unmountable discarding all data currently on the disks and update parity to reflect this=
Creating Flash backup=
creating Flash backup zip file this may take several minutes=creating Flash backup zip file (this may take several minutes)
Creation error=
Critical disk temperature threshold=
Critical disk utilization threshold=
Current operation %s on %s=Current operation %s on **%s**
Current position=
Custom attributes use comma to separate numbers=Custom attributes (use comma to separate numbers)
Date of purchase=
Date=
Delete Pool=
detected=
Device encrypted and unlocked=
Device encrypted=
Device is part of a pool=
Device locked unknown error=
Device locked wrong encryption key=Device locked: wrong encryption key
Device to be encrypted=
Disk in parity slot is not biggest=
Disk Log Information=
Do not use reserved names=
Do not use user share names=
Download SMART report=
Dual parity valid requires ALL disks in their original slots=*Dual parity* valid requires **ALL** disks in their original slots
Elapsed time=
encrypted=
Encryption input=
Encryption status=
Enter new key=
Errors occurred - Check SMART report=
Estimated finish=
Estimated speed=
Failed=
Feature=
File system status=
File system type=
Finding %s error=Finding: **%s** error
Finding %s errors=Finding: **%s** errors
Flag=
Flash backup=
Flash Device Settings=
Format Unmountable disks=
Formatting=
formatting=
Free=
FS=
Global Configuration=
Hide=
Identification=
Identity=
if checked, Start array but do not mount disks=
If this is a new array, move the largest disk into the parity slot=
If you are adding a new disk or replacing a disabled disk, try Parity-Swap=
If you want to preserve the data on the new disks, reset the array configuration and rebuild parity instead=
Information=
Install a replacement disk as soon as possible=
Insufficient free disk space available=
Interrupted=
Invalid configuration=
Invalid expansion=
Invalid pool name=
is only available when array is Started in Maintenance mode=is only available when array is Started in **Maintenance mode**
is only available when array is Started=
Keyfile=
Last check completed on %s=Last check completed on **%s**
Last check incomplete on %s=Last check incomplete on **%s**
Last checked on %s=Last checked on **%s**
Last SMART test result=
Maintenance mode=
Maintenance Mode=
Maintenance=
Manufacturing date=
Menu View=
Minimum free space=
Missing Cache disk=
Missing disk=
Missing key=
Missing=
Mounted=
Mover is running=
network settings=
New data disks detected=
No array data disks have been assigned=
No data disks=
No parity check history present=
No self-tests logged on this disk=
Not installed=
Note do not use pool names which are also used as user share names=Note: do not use pool names which are also used as user share names
OK=
Once clear completes, the array may be Started, expanding the array to include the new disks=
Once copy completes, the array may be Started, to initiate Data-Rebuild of the disabled disk=
operation=
Options see Help=Options (see Help)
Otherwise use the keyfile method for UTF8 input=Otherwise use the **keyfile** method for UTF8 input
Parity disks content will be overwritten=*Parity* disk(s) content will be overwritten
Parity is already valid=
Parity operation is running=
Parity valid requires ALL disks to have their original content=*Parity valid* requires **ALL** disks to have their original content
Parity-Check in progress=
ParityRead-Check History=Parity/Read-Check History
Parity-SyncData-Rebuild in progress=Parity-Sync/Data-Rebuild in progress
Partition format=
Partition size=
Passed=
Passphrase=
Perform full balance=
Permit UEFI boot mode=
Please check your system settings to support UEFI boot mode=
Pool Devices=
Pool name already exists=
Pool of %s devices=
Preclear in progress=
Printable Characters Only=
Proceed to start=
Raw Value=
Raw View=
Read-Check in progress=
Reboot in safe mode=
registration key=
Registration Key Manager=
reiserfsck status=
Rename Pool=
Rename=
Repair corrupted blocks=
Replacement disk installed=
Replacement disk is too small=
Retype passphrase=
Schedule=
Scrub Status=
Scrub=
See Cache Settings=
self-test in progress=
Self-Test=
Server boot mode=
Set default boot menu=
show passphrase=
Show=
Slots=
SMART attribute notifications=
SMART error log=
SMART extended self-test=
SMART health-check failed=
SMART notification value=
SMART self-test history=
SMART Settings=
SMART short self-test=
SMART status=
Speed=
Spin down delay=
Spin Down=
Spin Up=
Spinup groups=
Started, array protected=
Started, array unprotected=
Started, formatting=
Starting=
Stopping=
Sync errors=
Sync=
Syslinux Configuration=
Syslinux configuration=
Temp=
The array will be immediately available, but unprotected since parity has not been assigned=The array will be immediately available, but **unprotected** since *parity* has not been assigned
The array will be immediately available, but unprotected until Parity-Sync completes=The array will be immediately available, but **unprotected** until Parity-Sync completes
The replacement disk must be as big or bigger than the original=
This is typically done when a new disk is added to the array to get it ready for files to be written to it=
This unRAID Server OS release has been withdrawn and may no longer be used. Please %s update your server=
This will reboot the system=
This will shutdown the system=
This will stop the array=
This will stop the running operation=
Threshold=
Title=
Toggle readswrites display=Toggle reads/writes display
Too many attached devices. Please consider upgrading your=
Too many wrong andor missing disks=Too many wrong and/or missing disks
Total size=
Unassign ALL devices to delete this pool=Unassign **ALL** devices to delete this pool
Unavailable - disk must be spun up=
Unavailable=
Unclean shutdown detected=
Unmountable disk present=
Unmountable disks present=
Unmountable Encrypted volume present=Unmountable: Encrypted volume present
Unmountable Missing encryption key=Unmountable: Missing encryption key
Unmountable No file system=Unmountable: No file system
Unmountable No pool uuid=Unmountable: No pool uuid
Unmountable not btrfs pool=Unmountable: not btrfs pool
Unmountable Volume not encrypted=Unmountable: Volume not encrypted
Unmounted=
Upgrading diskswapping parity=Upgrading disk/swapping parity
Use ASCII characters from space to tilde=Use **ASCII** characters from space to tilde
Use Default=
Use default=
Use only lowercase with no special characters or leadingtrailing digits=Use only lowercase with no special characters or leading/trailing digits
use printable characters only=
Used=
Value=
WARNING canceling may leave the array unprotected=WARNING: canceling may leave the array unprotected
Warning disk temperature threshold=
Warning disk utilization threshold=
WARNING=
Warranty period=
will activate a clean system power down=
will activate a clean system reset=
will bring the array on-line and start Clearing new data disks=will bring the array on-line and start **Clearing** new data disks
will bring the array on-line and start Parity-Check=will bring the array on-line and start **Parity-Check**
will bring the array on-line and start Parity-Sync andor Data-Rebuild=will bring the array on-line and start **Parity-Sync** and/or **Data-Rebuild**
will bring the array on-line=
will copy the parity information to the new parity disk=
will create a file system in all Unmountable disks=
will delete the encryption keyfile=
will disable the missing disk and then bring the array on-line. Install a replacement disk as soon as possible=
will expand the file system of the data disk if possible; then bring the array on-line and start Data-Rebuild=
will immediately clear all disk statistics=
will immediately invoke the Mover=
will immediately spin down all disks=
will immediately spin up all disks=
will pause the Clearing=
will pause the Parity-Check=
will pause the Parity-SyncData-Rebuild=will pause the Parity-Sync/Data-Rebuild
will pause the Read-Check=
will record all disk information and bring the array on-line=
will record all disk information, bring the array on-line, and start Parity-Sync=
will record the new disks information and bring the expanded array on-line=
will remove the missing cache disk and then bring the array on-line=
will resume the paused Clearing=
will resume the paused Parity-Check=
will resume the paused Parity-SyncData-Rebuild=will resume the paused Parity-Sync/Data-Rebuild
will resume the paused Read-Check=
will start Clearing new data disks=will start **Clearing** new data disks
will start Parity-Check=will start **Parity-Check**
will start Parity-Sync andor Data-Rebuild=will start **Parity-Sync** and/or **Data-Rebuild**
will start Read-Check of all data disks=will start **Read-Check** of all data disks
will stop Clearing=
will stop Parity-SyncData-Rebuild=will stop Parity-Sync/Data-Rebuild
will stop the Parity-Check=
will stop the Read-Check=
will take the array off-line=
Worst=
Write corrections to parity=
Writes=
Wrong key=
xfs_repair status=
You may not add new disks and also remove existing disks=
your server=

:help1
> **Colored Status Indicator** the significance of the color indicator at the beginning of each line in *Array Devices* is as follows:
>
> <i class='fa fa-circle orb green-orb'></i>Normal operation, device is active.
>
> <i class='fa fa-circle orb grey-orb'></i>Device is in standby mode (spun-down).
>
> <i class='fa fa-warning orb yellow-orb'></i>Device contents emulated.
>
> <i class='fa fa-times orb red-orb'></i>Device is disabled, contents emulated.
>
> <i class='fa fa-square orb blue-orb'></i>New device.
>
> <i class='fa fa-square orb grey-orb'></i>No device present, position is empty.
>
> **Identification** is the *signature* that uniquely identifies a storage device. The signature
> includes the device model number, serial number, linux device id, and the device size.
>
> **Temp.** (temperature) is read directly from the device. You configure which units to use on
> the [Display Preferences](Settings/DisplaySettings) page.  We do not read the temperature of spun-down hard
> drives since this typically causes them to spin up; instead we display the `*` symbol.  We also
> display the `*` symbol for SSD and Flash devices, though sometimes these devices do report a valid
> temperature, and sometimes they return the value `0`.
>
> **Size, Used, Free** reports the total device size, used space, and remaining space for files.  These
> units are also configured on the [Display Preferences](Settings/DisplaySettings) page.  The
> amount of space used will be non-zero even for an empty disk due to file system overhead.
>
> *Note: for a multi-device cache pool, this data is for the entire pool as returned by btrfs.*
>
> **Reads, Writes** are a count of I/O requests sent to the device I/O drivers.  These statistics may
> be cleared at any time, refer to the Array Status section below.
>
> **Errors** counts the number of *unrecoverable* errors reported by the device
> I/O drivers. Missing data due to unrecoverable array read errors is filled in on-the-fly using parity
> reconstruct (and we attempt to write this data back to the sector(s) which failed). Any unrecoverable
> write error results in *disabling* the disk.
>
> **FS** indicates the file system detected in partition 1 of the device.
>
> **View** column contains a folder icon indicating the device is *mounted*. Click the icon to
> browse the file system.
>
> If "Display array totals" is enable on the [Display Preferences](Settings/DisplaySettings) page, a
> **Total** line is included which provides a tally of the device statistics, including the average temperature
> of your devices.
>
> The Array must be Stopped in order to change Array device assignments.
>
> An Unraid array consists of one or two Parity disks and a number of Data disks. The Data
> disks are exclusively used to store user data, and the Parity disk(s) provides the redundancy necessary
> to recover from disk failures.
>
> Since data is not striped across the array, the Parity disk(s) must be as large, or larger than the largest Data
> disk.  Parity should also be your highest performance drive.
>
> Each Data disk has its own file system and can be exported as a
> separate share.
>
> Click on the Device name to configure individual device settings and launch certain utilities.
:end

:help2
> **Slots** select the number of device slots in your server designated for Array devices.
> The minimum number of Array slots is 2, and you must have at least one device assigned to the array.
:end

:help3
> **Colored Status Indicator** the significance of the color indicator at the beginning of each line in *Pool Devices* is as follows:
>
> <i class='fa fa-circle orb green-orb'></i>Normal operation, device is active.
>
> <i class='fa fa-circle orb grey-orb'></i>Device is in standby mode (spun-down).
>
> <i class='fa fa-square orb blue-orb'></i>New device.
>
> <i class='fa fa-square orb grey-orb'></i>No device present, position is empty.
>
> **Pool Devices** is a single device, or pool of multiple devices, *outside* the Unraid array.  It may be exported for network access just
> like an Array device.  Being outside the Unraid array results in significantly faster write access.
>
> There are two ways to configure the Pool devices:
>
> 1. As a single device, or
> 2. As a multi-device pool.
>
> When configured as a single device you may format the device using any supported file system (btrfs, reiserfs,
> or xfs).  This configuration offers the highest performance, but at the cost of no data protection - if the
> single pool device fails all data contained on it may be lost.
>
> When configured as a multi-device pool, Unraid OS will automatically select *btrfs-raid1* format (for both data
> and meta-data).  btrfs permits any number of devices to be added to the pool and each copy of data is guaranteed
> to be written to two different devices.  Hence the pool can withstand a single-disk failure without losing data.
>
> When [User Shares](/Settings/ShareSettings) are enabled, user shares may be configured to
> automatically make use of the Pool device in order to
> speed up writes.  A special background process called the *mover* can be scheduled to run
> periodically to move user share files off the Cache and onto the Array.
:end

:help4
> **Slots** select the number of device slots in your server designated for Cache devices.
:end

:help5
> Vital array configuration is maintained on the USB Flash device; for this reason, it must remain
> plugged in to your server.  Click on [Flash](/Main/Flash?name=flash) to see the GUID and registration
> information, and to configure export settings.  Since the USB Flash device is formatted using FAT file system,
> it may only be exported using SMB protocol.
:end

:help6
> **Colored Status Indicator** the significance of the color indicator of the *Array* is as follows:
>
> <i class='fa fa-circle orb green-orb'></i>Array is Started and Parity is valid.
>
> <i class='fa fa-circle orb grey-orb'></i>Array is Stopped, Parity is valid.
>
> <i class='fa fa-warning orb yellow-orb'></i>Array is Started, but Parity is invalid.
>
> <i class='fa fa-warning orb grey-orb'></i>Array is Stopped, Parity is invalid.
>
:end

:help7
> #### Assigning Devices
>
> An unRAID disk array consists of a single parity disk and a number of data disks. The data
> disks are exclusively used to store user data, and the parity disk provides the redundancy necessary
> to recover from any singe disk failure.
>
> Note that we are careful to use the term *disk* when referring to an array storage device.  We
> use the term *hard drive* (or sometimes just *drive*) when referring to an actual hard disk drive (HDD)
> device. This is because in a RAID system it is possible to read/write an array disk whose corresponding
> hard drive is disabled or even missing! In addition, it is useful to be able to ask, "which device is
> assigned to be the parity disk?"; or, "which device corresponds to disk2?".
>
> We therefore need a way to assign hard drives to array disks. This is accomplished here on the
> Main page when the array is stopped. There is a drop-down box for each array disk which lists all the
> unassigned devices. To assign a device simply select it from the list. Each time a device
> assignment is made, the system updates a configuration file to record the assignment.
>
> #### Requirements
>
> Unlike traditional RAID systems which stripe data across all the array devices, an unRAID server
> stores files on individual hard drives. Consequently, all file write operations will involve both the
> data disk the file is being written to, and the parity disk. For these reasons,
>
> * the parity disk size must be as large or larger than any of the data disks,
>
> and
>
> * given a choice, the parity disk should be the fastest disk in your collection.
>
> #### Guidelines
>
> Here are the steps you should follow when designing your unRAID disk array:
>
> 1. Decide which hard drive you will use for parity, and which hard drives you will use for
> data disk1, disk2, etc., and label them in some fashion. Also, find the serial number of each hard
> drive and jot it down somewhere; you will need this information later.
>
> 2. Install your hard drive devices, boot unRAID Server and bring up the webGui. If this is a fresh system
> build, then the Main page will show no disks installed. This doesn't mean the system can't detect your
> hard drives; it just means that none have been assigned yet.
>
> 3. Remember the serial numbers you recored back in step 1? For parity and each data disk, select the
> proper hard drive based on its serial number from the drop down list.
>
> #### Hot Plug
>
> You may also *hot plug* hard drives into your server if your hardware supports it. For example,
> if you are using hard drive cages, you may simply plug them into your server while powered on and
> with array Stopped. Refresh the Main page to have new unassigned devices appear in the assignment
> dropdown lists.
>
> #### Next Steps
>
> Once you have assigned all of your hard drives, refer to the Array Status section below
> and Start the array.
:end

:help8
> #### Encryption input
>
> With array Stopped, the user can specify a new encryption key. Note that once a device
> is formatted with a particular key it may only be opened using that same key. Changing the encryption key requires
> encrypted devices to be reformatted **resulting in permanent loss of all existing data on those devices.**
>
> #### Passphrase
>
> Enter a passphrase of up to 512 characters. It is highly advisable to only use the 95 printable characters from the
> first 128 characters of the [ASCII table](https://en.wikipedia.org/wiki/ASCII), as they will always have the same binary
> representation. Other characters may have different encoding depending on system configuration and your passphrase will
> not work with a different encoding. If you want a longer passphrase or to include binary data, upload a keyfile instead.
>
> Please refer to the [cryptsetup FAQ](https://gitlab.com/cryptsetup/cryptsetup/wikis/FrequentlyAskedQuestions#5-security-aspects)
> for what constitutes a *secure* passphrase.
>
> **Memorize** this passphrase. **IF LOST, ENCRYPTED CONTENT CANNOT BE RECOVERED!**
>
> #### Keyfile
>
> Select a local keyfile with a stored encryption key or a binary file. The maximum size of the keyfile is 8M (8388608 byte).
>
> **Backup** your local keyfile. **IF LOST, ENCRYPTED CONTENT CANNOT BE RECOVERED!**
:end

:help9
> *Warning disk temperature* sets the warning threshold for this hard disk temperature. Exceeding this threshold will result in a warning notification.
>
> A value of zero will disable the warning threshold (including notifications).
:end

:help10
> *Critical disk temperature* sets the critical threshold for this hard disk temperature. Exceeding this threshold will result in an alert notification.
>
> A value of zero will disable the critical threshold (including notifications).
:end

:help11
> Enter the desired file system type.  Changing the file system type of a device will permit you to reformat
> that device using the new file system.  Be aware that **all existing data on the device will be lost**.
:end

:help12
> This text will appear under the *Comments* column for the share in Windows Explorer.
> Enter anything you like, up to 256 characters.
:end

:help13
> *Warning disk utilization* sets the warning threshold for this hard disk utilization. Exceeding this threshold will result in a warning notification.
>
> When the warning threshold is set equal or greater than the critical threshold, there will be only critical notifications (warnings are not existing).
>
> A value of zero will disable the warning threshold (including notifications).
:end

:help14
> *Critical disk utilization* sets the critical threshold for this hard disk utilization. Exceeding this threshold will result in an alert notification.
>
> A value of zero will disable the critical threshold (including notifications).
:end

:help15
> **Balance** will run the *btrfs balance* program to restripe the extents across all pool devices, for example,
> to convert the pool from raid1 to raid0 or vice-versa.
>
> When a *full balance* is perfomred, it basically rewrites everything in the current filesystem.
>
> A *mode conversion* affects the btrfs data extents; metadata always uses raid1 and is converted to raid1 if necessary by any balance operation.
>
> The run time is potentially very long, depending on the filesystem size and speed of the device.
>
> Unraid uses these default options when creating a multiple-device pool:
>
> `-dconvert=raid1 -mconvert=raid1`
>
> For more complete documentation, please refer to the btrfs-balance [Manpage](https://btrfs.wiki.kernel.org/index.php/Manpage/btrfs-balance)
>
> *Note: raid5 and raid6 are generally still considered **experimental** by the Linux community*
:end

:help16
> **Cancel** will cancel the balance operation in progress.
:end

:help17
> **Scrub** runs the *btrfs scrub* program which will read all data and metadata blocks from all
> devices and verify checksums.
>
> If *Repair corrupted blocks* is checked, *btrfs scrub* will repair corrupted blocks if there’s a correct copy available.
:end

:help18
> **Cancel** will cancel the Scrub operation in progress.
:end

:help19
> **Check** will run the *btrfs check* program to check file system integrity on the device.
>
> The *Options* field is initialized with *--readonly* which specifies check-only.  If repair is needed, you should run
> a second Check pass, setting the *Options* to *--repair*; this will permit *btrfs check* to fix the file system.
>
> After starting a Check, you should Refresh to monitor progress and status.  Depending on
> how large the file system is, and what errors might be present, the operation can take **a long time** to finish (hours).
> Not much info is printed in the window, but you can verify the operation is running by observing the read/write counters
> increasing for the device on the Main page.
:end

:help20
> **Cancel** will cancel the Check operation in progress.
:end

:help21
> **Check** will run the *reiserfsck* program to check file system integrity on the device.
>
> The *Options* field may be filled in with specific options used to fix problems in the file system. Typically, you
> first run a Check pass leaving *Options* blank.  Upon completion, if *reiserfsck* finds any problems, you must
> run a second Check pass, using a specific option as instructed by the first *reiserfsck* pass.
>
> After starting a Check you should Refresh to monitor progress and status.  Depending on
> how large the file system is, and what errors might be present, the operation can take **a long time** to finish (hours).
> Not much info is printed in the window, but you can verify the operation is running by observing the read/write counters
> increasing for the device on the Main page.
:end

:help22
> **Cancel** will cancel the Check operation in progress.
:end

:help23
> **Check** will run the *xfs_repair* program to check file system integrity on the device.
>
> The *Options* field is initialized with *-n* which specifies check-only.  If repair is needed, you should run
> a second Check pass, setting the *Options* blank; this will permit *xfs_repair* to fix the file system.
>
> After starting a Check, you should Refresh to monitor progress and status.  Depending on
> how large the file system is, and what errors might be present, the operation can take **a long time** to finish (hours).
> Not much info is printed in the window, but you can verify the operation is running by observing the read/write counters
> increasing for the device on the Main page.
:end

:help24
> **Cancel** will cancel the Check operation in progress.
:end

:help25
> SMART notifications are generated on either an increasing RAW value of the attribute, or a decreasing NORMALIZED value which reaches a predefined threshold set by the manufacturer.
>
> Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:help26
> A tolerance level may be given to prevent that small changes result in a notification. Setting a too high tolerance level may result in critical changes without a notification.
>
> Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:help27
> By default automatic controller selection is done by smartctl to read the SMART information. Certain controllers however need specific settings for smartctl to work.
> Use this setting to select your controller type and fill-in the specific disk index and device name for your situation. Use the manufacturer's documentation to find the relevant information.
>
> Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:help28
> The user can enable or disable notifications for the given SMART attributes. It is recommended to keep the default, which is ALL selected attributes,
> when certain attributes are not present on your hard disk or do not provide the correct information, these may be excluded.
> In addition custom SMART attributes can be entered to generate notifications. Be careful in this selection,
> it may cause an avalance of notifcations if inappropriate SMART attributes are chosen.
>
> Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:help29
> Press **Show** to view the self-test history as is kept on the disk itself.
> This feature is only available when the disk is in active mode.
:end

:help30
> Press **Show** to view the error report as is kept on the disk itself.
> This feature is only available when the disk is in active mode.
:end

:help31
> Starts a *short* SMART self-test, the estimated duration can be viewed under the *Capabilities* section. This is usually a few minutes.
>
> When the disk is spun down, it will abort any running self-test.
> This feature is only available when the disk is in active mode.
:end

:help32
> Starts an *extended* SMART self-test, the estimated duration can be viewed under the *Capabilities* section. This is usually several hours.
>
> When the disk is spun down, it will abort any running self-test. It is advised to disable the spin down timer of the disk
> to avoid interruption of this self-test.
>
> This feature is only available when the disk is in active mode.
:end

:help33
> When no test is running it will show here the latest obtained self-test result (if available).
> Otherwise a progress indicator (percentage value) is shown for a running test.
:end

:help34
> This list shows the SMART attributes supported by this disk. For more information about each SMART attribute, it is recommended to search online.
>
> Attributes in *orange* may require your attention. They have a **raw value** greater than zero and may indicate a pending disk failure.
>
> Special attention is required when the particular attribute raw value starts to increase over time. When in doubt, consult the Limetech forum for advice.
:end

:help35
> This list shows the SMART capabilities supported by this disk.
>
> Observe here the estimated duration of the SMART short and extended self-tests.
:end

:help36
> This list shows the SMART identity information of this disk
:end

:help37
> These are devices installed in your server but not assigned to either the parity-protected
> array or the cache disk/pool.
:end

:help38
> Use *Flash backup* to create a single zip file of the current contents of the flash device and store it locally on your computer.
:end

:help39
> Use this page to make changes to your `syslinux.cfg` file.
> You will need to reboot your server for these changes to take effect.
:end

:help40
> Click the **Default** button to initialize the edit box with the
> factory-default contents.  You still need to click **Apply** in order to
>commit the change.
>
> Click the **Apply** button to commit the current edits.  Click **Reset** to
> undo any changes you make (before Saving). Click **Done** to exit this page.
:end

:help41
> This defines a "floor" for the amount of free space remaining in the volume.
> If the free space becomes less than this value, then new files written via user shares will fail with "not enough space" error.
>
> Enter a numeric value with one of these suffixes:
>
> **KB** = 1,000<br>
> **MB** = 1,000,000<br>
> **GB** = 1,000,000,000<br>
> **TB** = 1,000,000,000,000<br>
> **K** = 1,024 (ie, 2^10)<br>
> **M** = 1,048,576 (ie, 2^20)<br>
> **G** = 1,073,741,824 (ie, 2^30)<br>
> **T** = 1,099,511,627,776 (ie, 2^40)<br>
>
> If no suffix, a count of 1024-byte blocks is assumed.
:end